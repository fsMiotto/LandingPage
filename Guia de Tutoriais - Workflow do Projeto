# Guia de Tutoriais - Workflow do Projeto

Este documento detalha os passos práticos para executar as principais tarefas do workflow do projeto, incluindo criação de branches, commits, Pull Requests e manutenção do repositório.

---

## **1. Clonar o Repositório com SSH**

1. Verifique se você tem uma chave SSH configurada no GitHub. Se ainda não configurou, siga [este guia](https://docs.github.com/en/authentication/connecting-to-github-with-ssh).
2. Copie o link SSH do repositório (geralmente tem o formato `git@github.com:usuario/repositorio.git`).
3. No terminal, use o comando:
   ```bash
   git clone git@github.com:usuario/repositorio.git
   ```

---

## **2. Criar uma Branch**

### Padrão de Nomeação de Branches
- Todas as branches devem seguir o formato `LP-{número-da-task}`.
  - Exemplo: `LP-1` para a task 1.

### Como Criar uma Nova Branch
1. Certifique-se de que sua branch `main` está atualizada:
   ```bash
   git checkout main
   git pull origin main
   ```
2. Crie e altere para uma nova branch baseada na task que você irá desenvolver:
   ```bash
   git checkout -b LP-{número-da-task}
   ```
   - Exemplo: `git checkout -b LP-1`.

3. Verifique se você está na branch correta:
   ```bash
   git branch
   ```

---

## **3. Fazer Commits**

### Padrão de Commits
- Os commits devem seguir o formato:
  ```
  tipo: descrição curta
  ```
- **Tipos de commits:**
  - `feat`: Adicionando uma nova funcionalidade.
  - `fix`: Corrigindo um bug.
  - `docs`: Atualizando documentação.
  - `refactor`: Refatorando código sem alterar funcionalidade.
  - `test`: Adicionando ou corrigindo testes.
  - `style`: Ajustes de estilo (espaçamento, indentacão, etc.).

### Como Fazer um Commit
1. Adicione os arquivos alterados:
   ```bash
   git add .
   ```
2. Crie o commit:
   ```bash
   git commit -m "tipo: descrição curta"
   ```
   - Exemplo: `git commit -m "feat: criar header da página inicial"`.

3. Envie as alterações para o repositório remoto:
   ```bash
   git push origin LP-{número-da-task}
   ```
   - Exemplo: `git push origin LP-1`.

---

## **4. Criar um Pull Request (PR)**

### Como Criar um PR
1. No GitHub, acesse a aba **Pull Requests** e clique em **New Pull Request**.
2. Escolha a branch da sua task como "source branch" e `main` como "target branch".
3. Preencha as informações do PR:
   - **Título:** Resuma o que foi feito. Exemplo: `Criar header da página inicial`.
   - **Descrição:** Explique as alterações realizadas e inclua o número da task.
4. Solicite revisores (mínimo de dois).
5. Envie o PR e acompanhe os comentários até a aprovação.

---

## **5. Atualizar sua Branch com a Main**

1. Certifique-se de que sua branch `main` está atualizada:
   ```bash
   git checkout main
   git pull origin main
   ```
2. Altere para a branch da sua task:
   ```bash
   git checkout LP-{número-da-task}
   ```
3. Mescle a branch `main` na sua branch:
   ```bash
   git merge main
   ```
4. Resolva conflitos, se houver, e confirme as alterações:
   ```bash
   git add .
   git commit -m "fix: resolver conflitos da merge com a main"
   ```

---

## **6. Mesclar um PR na Main**

1. Após a aprovação do PR, clique no botão **Merge** no GitHub.
2. Exclua a branch após a mesclagem para manter o repositório limpo.

---

## **7. Boas Práticas Gerais**
- **Revisão de Código:** Sempre revise o código antes de aprovar um PR.
- **Sincronização Frequente:** Atualize sua branch regularmente para evitar conflitos.
- **Documentação:** Certifique-se de que todas as alterações relevantes estão documentadas no código ou no README.

Com este guia, você tem todas as ferramentas para trabalhar eficientemente no repositório. Em caso de dúvidas, consulte o README ou entre em contato com o líder da equipe.

